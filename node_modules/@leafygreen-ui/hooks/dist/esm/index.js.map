{"version":3,"file":"index.js","sources":["../../src/useEventListener.ts","../../src/useMutationObserver.ts","../../src/useViewportSize.ts","../../src/useEscapeKey.ts","../../src/usePoller.ts","../../src/usePrevious.ts","../../src/useObjectDependency.ts","../../src/useIsomorphicLayoutEffect.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\nexport interface UseEventOptions {\n  options?: Omit<AddEventListenerOptions, 'once'>;\n  dependencies?: Array<any>;\n  enabled?: boolean | 'once';\n  element?: Document | HTMLElement;\n}\n\n/**\n * Hook to subscribe to an event listener.\n * @param type Represents the event type to listen for.\n * @param eventCallback Event listener callback function.\n * @param optional Optional third argument passed to function with implementation specifications\n * @param optional.options Parameter to specify options passed to the eventListener.\n * @param optional.enabled Determines whether or not the useEffect hook should run.\n * @param optional.dependencies Array to be passed to useEffect hook, such that the hook will only run if the array's values have changed.\n * @param optional.element Value to be passed as target of event handler, will default to document.\n */\nexport default function useEventListener<Type extends keyof DocumentEventMap>(\n  type: Type,\n  eventCallback: (e: DocumentEventMap[Type]) => void,\n  {\n    options,\n    enabled = true,\n    dependencies = [enabled, type],\n    element,\n  }: UseEventOptions = {},\n) {\n  const memoizedEventCallback: React.MutableRefObject<\n    (e: DocumentEventMap[Type]) => void\n  > = useRef(() => {});\n\n  useEffect(() => {\n    memoizedEventCallback.current = eventCallback;\n  }, [eventCallback]);\n\n  useEffect(() => {\n    if (enabled === false) {\n      return;\n    }\n\n    // Handle this in case non-TypeScript users pass in the wrong value\n    if (enabled !== 'once' && enabled !== true) {\n      console.error(\n        `Received value of type ${typeof enabled} for property \\`enabled\\`. Expected a boolean.`,\n      );\n      return;\n    }\n\n    const callback = (e: DocumentEventMap[Type]) =>\n      memoizedEventCallback.current(e);\n\n    const eventListenerOptions = {\n      ...options,\n      once: enabled === 'once',\n    };\n    // NOTE(JeT): I'm pretty sure there should be a way to avoid this type assertion, but I couldn't figure it out.\n    (element ?? document).addEventListener(\n      type,\n      callback as EventListener,\n      eventListenerOptions,\n    );\n\n    return () => {\n      (element ?? document).removeEventListener(\n        type,\n        callback as EventListener,\n        eventListenerOptions,\n      );\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n}\n","import { useEffect, useState } from 'react';\n\ntype MutationHandler<Value> = (\n  mutations: Array<MutationRecord>,\n  observer: MutationObserver,\n) => Value;\n\n/**\n * Hook to subscribe to changes on the DOM.\n * @param target HTML element that is subscribed to DOM changes.\n * @param options Object with information about what DOM changes to subscribe to.\n * @param callback Callback function to execute inside of MutationObserver instance.\n * @param enabled Determines whether or not the hook should run, defaults to true.\n */\nexport default function useMutationObserver<Value>(\n  target: HTMLElement | null,\n  options: MutationObserverInit,\n  callback: MutationHandler<Value>,\n  enabled = true,\n): Value | undefined {\n  const [value, setValue] = useState<Value>();\n\n  useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n\n    const observer = new MutationObserver((...args) => {\n      setValue(callback(...args));\n    });\n\n    if (target) {\n      observer.observe(target, options);\n    }\n\n    return () => observer.disconnect();\n  }, [target, options, callback, enabled]);\n\n  return value;\n}\n","import { useEffect, useState } from 'react';\nimport debounce from 'lodash/debounce';\n\ninterface ViewportSize {\n  width: number;\n  height: number;\n}\n\nfunction getViewportSize(): ViewportSize {\n  return {\n    width: window.innerWidth,\n    height: window.innerHeight,\n  };\n}\n\nexport default function useViewportSize(): ViewportSize | null {\n  const [viewportSize, setViewportUpdateVal] = useState<ViewportSize | null>(\n    null,\n  );\n\n  useEffect(() => {\n    setViewportUpdateVal(getViewportSize());\n\n    const calcResize = debounce(\n      () => setViewportUpdateVal(getViewportSize()),\n      100,\n    );\n\n    window.addEventListener('resize', calcResize);\n\n    return () => window.removeEventListener('resize', calcResize);\n  }, []);\n\n  return viewportSize;\n}\n","import useEventListener, { UseEventOptions } from './useEventListener';\n\nconst escapeKeyCode = 27;\n\nconst handleEscape = (e: KeyboardEvent, callback: () => void) => {\n  if (e.keyCode === escapeKeyCode) {\n    e.stopImmediatePropagation();\n    callback();\n  }\n};\n\n/**\n * Hook to subscribe to an escape-key-press.\n * @param callback Callback function to be executed when Escape key is pressed.\n * @param options Object to refine when callback is invoked.\n * @param options.options Parameter to specify options passed to the eventListener.\n * @param options.enabled Determines whether or not the useEffect hook should run.\n * @param options.dependencies Array to be passed to useEffect hook, such that the hook will only run if the array's values have changed.\n * @param options.element Value to be passed as target of event handler, will default to document.\n */\nconst useEscapeKey = (callback: () => void, options?: UseEventOptions) => {\n  return useEventListener('keydown', e => handleEscape(e, callback), options);\n};\n\nexport default useEscapeKey;\n","import { useState, useRef, useEffect } from 'react';\nimport useEventListener from './useEventListener';\n\nfunction useVisibilityChange() {\n  const isVisibilityStateVisible = () => document.visibilityState === 'visible';\n\n  const [isVisible, setIsVisible] = useState(true);\n\n  useEffect(() => {\n    setIsVisible(isVisibilityStateVisible);\n  }, []);\n\n  useEventListener('visibilitychange', () => {\n    setIsVisible(isVisibilityStateVisible);\n  });\n\n  return isVisible;\n}\n\ntype OnPoll = () => void;\n\ninterface PollerOptions {\n  /**\n   * How frequently should we call the onPoll handler. Defaults to 30 seconds.\n   * @default 30000\n   */\n  interval?: number;\n\n  /**\n   * Should we immediately trigger the onPoll handler.\n   * @default true\n   */\n  immediate?: boolean;\n\n  /**\n   * Should we be polling.\n   * @default true\n   */\n  enabled?: boolean;\n}\n\nexport default function usePoller(\n  onPoll: OnPoll,\n  { interval = 30e3, immediate = true, enabled = true }: PollerOptions = {},\n) {\n  const savedCallback = useRef<OnPoll>();\n  const isVisible = useVisibilityChange();\n\n  const isPolling = isVisible && enabled;\n\n  useEffect(() => {\n    savedCallback.current = onPoll;\n  });\n\n  useEffect(() => {\n    if (!isPolling) {\n      return;\n    }\n\n    // Using this reflection to get return type of setTimeout so we don't have to\n    // use window.setTimeout, makes this more cross-environment compatible\n    // Sourced from: https://stackoverflow.com/a/51040768\n    let id: ReturnType<typeof setTimeout>;\n\n    function scheduleNextPoll() {\n      unscheduleNextPoll();\n      id = setTimeout(poll, interval);\n    }\n\n    function unscheduleNextPoll() {\n      clearTimeout(id);\n    }\n\n    function poll() {\n      Promise.resolve(savedCallback.current?.()).finally(scheduleNextPoll);\n    }\n\n    if (immediate) {\n      poll();\n    } else {\n      scheduleNextPoll();\n    }\n\n    return unscheduleNextPoll;\n  }, [interval, immediate, isPolling]);\n}\n","import { useEffect, useRef } from 'react';\n\n/**\n * Hook to store previous props\n * https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nexport default function usePrevious<T>(value: T): T | undefined {\n  const ref = useRef<T>();\n\n  useEffect(() => {\n    ref.current = value;\n  });\n\n  return ref.current;\n}\n","import { useRef } from 'react';\nimport isEqual from 'lodash/isEqual';\n\nexport default function useObjectDependency<T>(object: T): T {\n  const ref = useRef<T>();\n\n  // we need isEqual for deep object comparison\n  if (ref.current === undefined || !isEqual(ref.current, object)) {\n    ref.current = object;\n  }\n\n  return ref.current;\n}\n","import { useEffect, useLayoutEffect } from 'react';\n\nconst useIsomorphicLayoutEffect: typeof useLayoutEffect = (...args) => {\n  const effectHook =\n    typeof window === 'undefined' ? useEffect : useLayoutEffect;\n  return effectHook(...args);\n};\n\nexport default useIsomorphicLayoutEffect;\n"],"names":["useEventListener","type","eventCallback","_ref","arguments","length","undefined","options","_ref$enabled","enabled","_ref$dependencies","dependencies","element","memoizedEventCallback","useRef","useEffect","current","callback","e","eventListenerOptions","_objectSpread","once","document","addEventListener","removeEventListener","console","error","concat","_typeof","useMutationObserver","target","_useState","useState","_useState2","_slicedToArray","value","setValue","observer","MutationObserver","apply","observe","disconnect","getViewportSize","width","window","innerWidth","height","innerHeight","useViewportSize","viewportSize","setViewportUpdateVal","calcResize","debounce","useEscapeKey","keyCode","stopImmediatePropagation","handleEscape","useVisibilityChange","isVisibilityStateVisible","visibilityState","isVisible","setIsVisible","usePoller","onPoll","_ref$interval","interval","_ref$immediate","immediate","savedCallback","isPolling","id","poll","scheduleNextPoll","unscheduleNextPoll","setTimeout","clearTimeout","_savedCallback$curren","Promise","resolve","call","finally","usePrevious","ref","useObjectDependency","object","isEqual","useIsomorphicLayoutEffect","effectHook","useLayoutEffect"],"mappings":"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"}