{"version":3,"file":"index.js","sources":["../src/styles.tsx","../src/Typography.tsx","../src/Link.tsx","../src/FormElements.tsx"],"sourcesContent":["import { css } from '@leafygreen-ui/emotion';\n\nexport const typeScale1 = css`\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0px;\n`;\n\nexport const typeScale2 = css`\n  font-size: 16px;\n  line-height: 24px;\n  letter-spacing: 0px;\n`;\n","import React from 'react';\nimport Box, { ExtendableBox } from '@leafygreen-ui/box';\nimport { HTMLElementProps, createDataProp, OneOf } from '@leafygreen-ui/lib';\nimport {\n  useBaseFontSize,\n  useUsingKeyboardContext,\n} from '@leafygreen-ui/leafygreen-provider';\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport { uiColors } from '@leafygreen-ui/palette';\nimport { fontFamilies } from '@leafygreen-ui/tokens';\nimport { typeScale1, typeScale2 } from './styles';\n\nconst sharedStyles = css`\n  margin: unset;\n  font-family: ${fontFamilies.default};\n  color: ${uiColors.gray.dark3};\n`;\n\nconst h1 = css`\n  font-weight: 500;\n  font-size: 60px;\n  line-height: 68px;\n  letter-spacing: -0.3px;\n`;\n\ntype H1Props = HTMLElementProps<'h1'>;\n\nconst H1: ExtendableBox<H1Props, 'h1'> = ({\n  className,\n  ...rest\n}: {\n  className?: string;\n}) => {\n  return <Box as=\"h1\" className={cx(sharedStyles, h1, className)} {...rest} />;\n};\n\nH1.displayName = 'H1';\n\nconst h2 = css`\n  font-size: 32px;\n  line-height: 40px;\n  letter-spacing: 0px;\n`;\n\ntype H2Props = HTMLElementProps<'h2'>;\n\nconst H2: ExtendableBox<H2Props, 'h2'> = ({\n  className,\n  ...rest\n}: {\n  className?: string;\n}) => {\n  return <Box as=\"h2\" className={cx(sharedStyles, h2, className)} {...rest} />;\n};\n\nH2.displayName = 'H2';\n\nconst h3 = css`\n  font-size: 24px;\n  line-height: 32px;\n  letter-spacing: 0px;\n  font-weight: medium;\n`;\n\ntype H3Props = HTMLElementProps<'h3'>;\n\nconst H3: ExtendableBox<H3Props, 'h3'> = ({\n  className,\n  ...rest\n}: {\n  className?: string;\n}) => {\n  return <Box as=\"h3\" className={cx(sharedStyles, h3, className)} {...rest} />;\n};\n\nH3.displayName = 'H3';\n\nconst subtitle = css`\n  font-size: 18px;\n  line-height: 24px;\n  letter-spacing: 0px;\n`;\n\ntype SubtitleProps = HTMLElementProps<'h6'>;\n\nconst Subtitle: ExtendableBox<SubtitleProps, 'h6'> = ({\n  className,\n  ...rest\n}: {\n  className?: string;\n}) => {\n  return (\n    <Box as=\"h6\" className={cx(sharedStyles, subtitle, className)} {...rest} />\n  );\n};\n\nSubtitle.displayName = 'Subtitle';\n\ntype BodyProps = HTMLElementProps<'div'> & {\n  /**\n   * font-weight applied to typography element\n   * default: `regular`\n   */\n  weight?: 'regular' | 'medium';\n};\n\nfunction Body({ children, className, weight = 'regular', ...rest }: BodyProps) {\n  const size = useBaseFontSize();\n  const body = size === 16 ? typeScale2 : typeScale1;\n\n  const fontWeight = css`\n    font-weight: ${weight !== 'regular' ? 600 : 400};\n  `;\n\n  return (\n    <div {...rest} className={cx(sharedStyles, body, fontWeight, className)}>\n      {children}\n    </div>\n  );\n}\n\nBody.displayName = 'Body';\n\nconst anchorDataProp = createDataProp('anchor-inline-code');\n\nconst code = css`\n  background-color: ${uiColors.gray.light3};\n  border: 1px solid ${uiColors.gray.light1};\n  border-radius: 3px;\n  font-family: ${fontFamilies.code};\n\n  ${anchorDataProp.selector}:hover > & {\n    box-shadow: 0 0 0 3px ${uiColors.gray.light2};\n  }\n`;\n\nconst codeFocus = css`\n  ${anchorDataProp.selector}:focus > & {\n    box-shadow: 0 0 0 3px ${uiColors.blue.light2};\n  }\n`;\n\nconst codeLink = css`\n  text-decoration: none;\n  margin: 0;\n  padding: 0;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst nowrap = css`\n  white-space: nowrap;\n`;\n\nconst normal = css`\n  white-space: normal;\n`;\n\nconst colorBlue = css`\n  color: ${uiColors.blue.base};\n`;\n\ntype InlineCodeProps = OneOf<HTMLElementProps<'code'>, HTMLElementProps<'a'>>;\n\nfunction InlineCode({ children, className, ...rest }: InlineCodeProps) {\n  const { usingKeyboard: showFocus } = useUsingKeyboardContext();\n  const size = useBaseFontSize();\n  const fontSize = size === 16 ? typeScale2 : typeScale1;\n  const whiteSpace =\n    ((typeof children === 'string' && children.match(/./gu)?.length) ?? 0) <= 30\n      ? nowrap\n      : normal;\n  const isAnchor = rest?.href !== undefined || rest.onClick !== undefined;\n\n  const renderedInlineCode = (\n    <code\n      className={cx(\n        code,\n        fontSize,\n        whiteSpace,\n        { [codeFocus]: showFocus },\n        className,\n      )}\n    >\n      {children}\n    </code>\n  );\n\n  if (isAnchor) {\n    return (\n      <a\n        {...anchorDataProp.prop}\n        className={cx(codeLink, colorBlue, className)}\n        {...rest}\n      >\n        {renderedInlineCode}\n      </a>\n    );\n  }\n\n  return React.cloneElement(renderedInlineCode, rest);\n}\n\nInlineCode.displayName = 'InlineCode';\n\nconst inlineKeyCode = css`\n  font-family: ${fontFamilies.code};\n  color: ${uiColors.gray.dark3};\n  border: 1px solid ${uiColors.gray.dark3};\n  border-radius: 3px;\n  padding-left: 4px;\n  padding-right: 4px;\n`;\n\nfunction InlineKeyCode({ children, className, ...rest }: InlineCodeProps) {\n  const size = useBaseFontSize();\n  const body = size === 16 ? typeScale2 : typeScale1;\n\n  return (\n    <code className={cx(inlineKeyCode, body, className)} {...rest}>\n      {children}\n    </code>\n  );\n}\n\nInlineKeyCode.displayName = 'InlineKeyCode';\n\nconst disclaimer = css`\n  display: block;\n  font-size: 12px;\n  line-height: 20px;\n  letter-spacing: 0.2px;\n`;\n\ntype DisclaimerProps = HTMLElementProps<'small'>;\n\nfunction Disclaimer({ children, className, ...rest }: DisclaimerProps) {\n  return (\n    <small {...rest} className={cx(sharedStyles, disclaimer, className)}>\n      {children}\n    </small>\n  );\n}\n\nDisclaimer.displayName = 'Disclaimer';\n\nconst overline = css`\n  font-size: 12px;\n  font-weight: 600;\n  text-transform: uppercase;\n  line-height: 16px;\n  letter-spacing: 0.4px;\n`;\n\nconst Overline: ExtendableBox<{\n  className?: string;\n}> = ({ className, ...rest }: { className?: string }) => {\n  return <Box className={cx(sharedStyles, overline, className)} {...rest} />;\n};\n\nOverline.displayName = 'Overline';\n\nexport {\n  H1,\n  H2,\n  H3,\n  Subtitle,\n  Body,\n  InlineCode,\n  InlineKeyCode,\n  Disclaimer,\n  Overline,\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport ArrowRightIcon from '@leafygreen-ui/icon/dist/ArrowRight';\nimport OpenNewTabIcon from '@leafygreen-ui/icon/dist/OpenNewTab';\nimport Box, { ExtendableBox } from '@leafygreen-ui/box';\nimport { useBaseFontSize } from '@leafygreen-ui/leafygreen-provider';\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport { uiColors } from '@leafygreen-ui/palette';\nimport { HTMLElementProps, createDataProp } from '@leafygreen-ui/lib';\nimport { typeScale1, typeScale2 } from './styles';\n\nconst anchorDataProp = createDataProp('anchor-container');\n\nconst linkStyles = css`\n  display: inline-flex;\n  align-items: center;\n  text-decoration: none;\n  color: ${uiColors.blue.base};\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst underline = css`\n  background-repeat: repeat-x;\n  background-size: 2px 2px;\n  background-position: center bottom;\n\n  ${anchorDataProp.selector}:hover & {\n    background-image: linear-gradient(\n      ${uiColors.gray.light2} 100%,\n      ${uiColors.gray.light2} 0\n    );\n  }\n\n  ${anchorDataProp.selector}:focus & {\n    background-image: linear-gradient(\n      to right,\n      ${uiColors.blue.light1} 100%,\n      ${uiColors.blue.light1} 0\n    );\n  }\n`;\n\nconst arrowRightIconPersist = css`\n  transform: translate3d(3px, 0, 0);\n`;\n\nconst arrowRightIconHover = css`\n  opacity: 0;\n  transform: translate3d(-3px, 0, 0);\n  transition: all 100ms ease-in;\n\n  ${anchorDataProp.selector}:hover & {\n    opacity: 1;\n    transform: translate3d(3px, 0, 0);\n  }\n`;\n\nconst openInNewTabStyles = css`\n  position: relative;\n  bottom: 4px;\n  left: -1px;\n  height: 12px;\n`;\n\nconst ArrowAppearance = {\n  Hover: 'hover',\n  Persist: 'persist',\n  None: 'none',\n} as const;\n\ntype ArrowAppearance = typeof ArrowAppearance[keyof typeof ArrowAppearance];\n\nexport { ArrowAppearance };\n\nexport interface LinkProps extends HTMLElementProps<'a'> {\n  arrowAppearance?: ArrowAppearance;\n  hideExternalIcon?: boolean;\n}\n\nconst Link: ExtendableBox<LinkProps, 'a'> = ({\n  href,\n  children,\n  className,\n  target: targetProp,\n  arrowAppearance = ArrowAppearance.None,\n  hideExternalIcon = false,\n  ...rest\n}: LinkProps) => {\n  const [currentHostname, setCurrentHostname] = useState('');\n  const hrefHostname = useMemo(() => href && new URL(href).hostname, [href]);\n\n  const size = useBaseFontSize();\n  const fontSize = size === 16 ? typeScale2 : typeScale1;\n\n  useEffect(() => {\n    setCurrentHostname(window.location.hostname);\n  }, []);\n\n  let target, icon, rel;\n\n  if (targetProp) {\n    target = targetProp;\n  } else {\n    if (hrefHostname === currentHostname) {\n      target = '_self';\n    } else {\n      target = '_blank';\n      rel = 'noopener noreferrer';\n    }\n  }\n\n  if (target === '_blank' && !hideExternalIcon) {\n    icon = (\n      <OpenNewTabIcon role=\"presentation\" className={openInNewTabStyles} />\n    );\n  } else if (arrowAppearance !== ArrowAppearance.None) {\n    icon = (\n      <ArrowRightIcon\n        role=\"presentation\"\n        size={12}\n        className={cx({\n          [arrowRightIconHover]: arrowAppearance === ArrowAppearance.Hover,\n          [arrowRightIconPersist]: arrowAppearance === ArrowAppearance.Persist,\n        })}\n      />\n    );\n  }\n\n  const elementProps = href\n    ? ({ as: 'a', href, target, rel } as const)\n    : ({ as: 'span' } as const);\n\n  return (\n    <Box\n      className={cx(linkStyles, fontSize, className)}\n      {...elementProps}\n      {...anchorDataProp.prop}\n      {...rest}\n    >\n      <span className={underline}>{children}</span>\n      {icon}\n    </Box>\n  );\n};\n\nexport { Link };\n","import React from 'react';\nimport { HTMLElementProps } from '@leafygreen-ui/lib';\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport { uiColors } from '@leafygreen-ui/palette';\n\nconst Mode = {\n  Light: 'light',\n  Dark: 'dark',\n} as const;\n\ntype Mode = typeof Mode[keyof typeof Mode];\n\ninterface ColorSets {\n  labelColor: string;\n  disabledLabelColor: string;\n  descriptionColor: string;\n}\n\nconst colorSets: Record<Mode, ColorSets> = {\n  [Mode.Light]: {\n    labelColor: css`\n      color: ${uiColors.gray.dark2};\n    `,\n    disabledLabelColor: css`\n      color: ${uiColors.gray.dark1};\n    `,\n    descriptionColor: css`\n      color: ${uiColors.gray.dark1};\n    `,\n  },\n  [Mode.Dark]: {\n    labelColor: css`\n      color: ${uiColors.white};\n    `,\n    disabledLabelColor: css`\n      color: ${uiColors.gray.light1};\n    `,\n    descriptionColor: css`\n      color: ${uiColors.gray.light1};\n    `,\n  },\n};\n\nconst labelStyle = css`\n  font-size: 14px;\n  font-weight: bold;\n  line-height: 16px;\n  padding-bottom: 4px;\n`;\n\ntype LabelProps = HTMLElementProps<'label', never> & {\n  darkMode?: boolean;\n  htmlFor: string;\n  disabled?: boolean;\n};\n\nconst Label = ({\n  darkMode = false,\n  className,\n  children,\n  disabled = false,\n  ...rest\n}: LabelProps) => {\n  const mode = darkMode ? Mode.Dark : Mode.Light;\n\n  return (\n    <label\n      className={cx(\n        labelStyle,\n        colorSets[mode].labelColor,\n        { [colorSets[mode].disabledLabelColor]: disabled },\n        className,\n      )}\n      {...rest}\n    >\n      {children}\n    </label>\n  );\n};\n\nLabel.displayName = 'Label';\n\nconst descriptionStyle = css`\n  font-size: 14px;\n  line-height: 16px;\n  font-weight: normal;\n  padding-bottom: 4px;\n  margin-top: 0;\n  margin-bottom: 0;\n`;\n\ntype DescriptionProps = HTMLElementProps<'p', never> & {\n  darkMode?: boolean;\n};\n\nconst Description = ({\n  darkMode = false,\n  children,\n  className,\n  ...rest\n}: DescriptionProps) => {\n  const mode = darkMode ? Mode.Dark : Mode.Light;\n\n  return (\n    <p\n      className={cx(\n        descriptionStyle,\n        colorSets[mode].descriptionColor,\n        className,\n      )}\n      {...rest}\n    >\n      {children}\n    </p>\n  );\n};\n\nDescription.displayName = 'Description';\n\nexport { Label, Description };\n"],"names":["_templateObject2","data","_taggedTemplateLiteral","_templateObject","typeScale1","css","typeScale2","_templateObject15","_templateObject14","_templateObject13","_templateObject12","_templateObject11","_templateObject10","_templateObject9","_templateObject8","_templateObject7","_templateObject6","_templateObject5","_templateObject4","_templateObject3","sharedStyles","fontFamilies","default","uiColors","gray","dark3","h1","H1","_ref","className","rest","_objectWithoutProperties","React","createElement","Box","_extends","as","cx","displayName","h2","H2","_ref2","h3","H3","_ref3","subtitle","Subtitle","_ref4","Body","_ref5","children","_ref5$weight","weight","body","useBaseFontSize","fontWeight","anchorDataProp","createDataProp","code","light3","light1","selector","light2","codeFocus","blue","codeLink","nowrap","normal","colorBlue","base","InlineCode","_ref6","_ref7","_children$match","showFocus","useUsingKeyboardContext","usingKeyboard","fontSize","whiteSpace","match","length","isAnchor","undefined","href","onClick","renderedInlineCode","_defineProperty","prop","cloneElement","inlineKeyCode","InlineKeyCode","_ref8","disclaimer","Disclaimer","_ref9","overline","Overline","_ref10","_colorSets","linkStyles","underline","arrowRightIconPersist","arrowRightIconHover","openInNewTabStyles","ArrowAppearance","Mode","colorSets","labelColor","dark2","disabledLabelColor","dark1","descriptionColor","white","labelStyle","Label","_ref$darkMode","darkMode","_ref$disabled","disabled","mode","descriptionStyle","Description","_ref2$darkMode","target","icon","rel","targetProp","_ref$arrowAppearance","arrowAppearance","_ref$hideExternalIcon","hideExternalIcon","_useState2","_slicedToArray","useState","currentHostname","setCurrentHostname","hrefHostname","useMemo","URL","hostname","useEffect","window","location","_cx","ArrowRightIcon","role","size","OpenNewTabIcon","elementProps"],"mappings":"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"}