{"version":3,"file":"index.js","sources":["../src/InteractionRing.tsx"],"sourcesContent":["import React, { useEffect, useCallback, useMemo, useState } from 'react';\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport { useUsingKeyboardContext } from '@leafygreen-ui/leafygreen-provider';\nimport { createDataProp } from '@leafygreen-ui/lib';\nimport { uiColors } from '@leafygreen-ui/palette';\n\nconst Mode = {\n  Light: 'light',\n  Dark: 'dark',\n} as const;\n\ntype Mode = typeof Mode[keyof typeof Mode];\n\ninterface ColorSet {\n  interactionRingHover: string;\n  interactionRingFocus: string;\n}\n\nconst colorSets: Record<Mode, ColorSet> = {\n  [Mode.Light]: {\n    interactionRingHover: uiColors.gray.light2,\n    interactionRingFocus: uiColors.focus,\n  },\n  [Mode.Dark]: {\n    interactionRingHover: uiColors.gray.dark1,\n    interactionRingFocus: uiColors.focus,\n  },\n};\n\nconst baseContainerStyle = css`\n  display: inline-flex;\n  align-items: stretch;\n  position: relative;\n  z-index: 0;\n`;\n\nconst baseInteractionRingStyle = css`\n  transition: all 150ms ease-in-out;\n  position: absolute;\n  z-index: -1;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  pointer-events: none;\n`;\n\nconst interactionRingDataProp = createDataProp('interaction-ring');\n\nfunction computeStyles({\n  mode,\n  hovered,\n  focused,\n  borderRadius = '4px',\n  color,\n}: {\n  mode: Mode;\n  hovered: boolean | undefined;\n  focused: boolean | undefined;\n  borderRadius?: string;\n  color?: {\n    focused?: string;\n    hovered?: string;\n  };\n}) {\n  const hoverStyle = css`\n    box-shadow: 0 0 0 3px\n      ${color?.hovered ?? colorSets[mode].interactionRingHover};\n  `;\n\n  const focusStyle = css`\n    box-shadow: 0 0 0 3px\n      ${color?.focused ?? colorSets[mode].interactionRingFocus};\n  `;\n\n  return {\n    container: cx(baseContainerStyle, {\n      [css`\n        &:hover > ${interactionRingDataProp.selector} {\n          ${hoverStyle}\n        }\n      `]: hovered !== false && !focused,\n    }),\n    interactionRing: cx(\n      baseInteractionRingStyle,\n      css`\n        border-radius: ${borderRadius};\n      `,\n      {\n        [hoverStyle]: hovered ?? false,\n      },\n      {\n        [focusStyle]: focused,\n      },\n    ),\n  };\n}\n\nconst baseContentStyle = css`\n  width: 100%;\n  height: 100%;\n\n  // Form elements don't always inherit these by default\n  // https://developer.mozilla.org/en-US/docs/Learn/Forms/Styling_web_forms#Fonts_and_text\n  font-family: inherit;\n  font-size: 100%;\n`;\n\ninterface State {\n  hovered?: boolean;\n  focused?: boolean;\n}\n\ninterface InteractionRingProps {\n  darkMode?: boolean;\n  className?: string;\n  borderRadius?: string;\n  color?: {\n    focused?: string;\n    hovered?: string;\n  };\n  focusTargetElement?: HTMLElement | null;\n  children: React.ReactElement;\n  disabled?: boolean;\n  forceState?: State;\n}\n\nexport default function InteractionRing({\n  darkMode = false,\n  className,\n  borderRadius,\n  color,\n  focusTargetElement,\n  children,\n  disabled = false,\n  forceState = {},\n  ...rest\n}: InteractionRingProps) {\n  const mode = darkMode ? Mode.Dark : Mode.Light;\n  const { usingKeyboard: showFocus } = useUsingKeyboardContext();\n\n  const [focused, setFocused] = useState<boolean>();\n\n  const styles = computeStyles({\n    mode,\n    hovered: forceState.hovered,\n    focused: showFocus && (forceState.focused ?? focused),\n    borderRadius,\n    color,\n  });\n\n  useEffect(() => {\n    if (focusTargetElement === undefined || focusTargetElement === null) {\n      return;\n    }\n\n    const focused = focusTargetElement === document.activeElement;\n    setFocused(focused);\n\n    if (focused) {\n      const offFocus = () => setFocused(false);\n      focusTargetElement.addEventListener('blur', offFocus);\n      return () => focusTargetElement.removeEventListener('blur', offFocus);\n    } else {\n      const onFocus = () => setFocused(true);\n      focusTargetElement.addEventListener('focus', onFocus);\n      return () => focusTargetElement.removeEventListener('focus', onFocus);\n    }\n  }, [focusTargetElement, focused]);\n\n  const { className: contentClassName } = children.props;\n\n  const childIsFocusTarget = focusTargetElement === undefined;\n\n  const onFocusProp = children.props.onFocus;\n  const onFocus = useCallback(\n    (event: React.FocusEvent) => {\n      if (childIsFocusTarget) {\n        setFocused(true);\n      }\n      onFocusProp?.(event);\n    },\n    [childIsFocusTarget, onFocusProp],\n  );\n\n  const onBlurProp = children.props.onBlur;\n  const onBlur = useCallback(\n    (event: React.FocusEvent) => {\n      if (childIsFocusTarget) {\n        setFocused(false);\n      }\n      onBlurProp?.(event);\n    },\n    [childIsFocusTarget, onBlurProp],\n  );\n\n  const content = useMemo(\n    () =>\n      React.cloneElement(children, {\n        className: cx(baseContentStyle, contentClassName),\n        onFocus,\n        onBlur,\n      }),\n    [children, contentClassName, onBlur, onFocus],\n  );\n\n  return (\n    <div className={cx(styles.container, className)} {...rest}>\n      {content}\n      {!disabled && (\n        <div\n          {...interactionRingDataProp.prop}\n          className={styles.interactionRing}\n        />\n      )}\n    </div>\n  );\n}\n\nInteractionRing.displayName = 'InteractionRing';\n"],"names":["_colorSets","_templateObject7","data","_taggedTemplateLiteral","_templateObject6","_templateObject5","_templateObject4","_templateObject3","_templateObject2","_templateObject","Mode","colorSets","_defineProperty","interactionRingHover","uiColors","gray","light2","interactionRingFocus","focus","dark1","baseContainerStyle","css","baseInteractionRingStyle","interactionRingDataProp","createDataProp","baseContentStyle","InteractionRing","_ref2","_forceState$focused","_ref2$darkMode","darkMode","className","borderRadius","color","focusTargetElement","children","_ref2$disabled","disabled","_ref2$forceState","forceState","rest","_objectWithoutProperties","mode","showFocus","useUsingKeyboardContext","usingKeyboard","_useState2","_slicedToArray","useState","focused","setFocused","styles","_ref","_color$hovered","_color$focused","hovered","_ref$borderRadius","hoverStyle","focusStyle","container","cx","selector","interactionRing","computeStyles","useEffect","document","activeElement","offFocus","addEventListener","removeEventListener","_onFocus","contentClassName","props","childIsFocusTarget","undefined","onFocusProp","onFocus","useCallback","event","onBlurProp","onBlur","content","useMemo","React","cloneElement","createElement","_extends","prop","displayName"],"mappings":"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"}