{"version":3,"file":"CreditCard.js","sources":["../src/glyphCommon.ts","../src/generated/CreditCard.tsx"],"sourcesContent":["export const Size = {\n  Small: 'small',\n  Default: 'default',\n  Large: 'large',\n  XLarge: 'xlarge',\n} as const;\n\nexport type Size = typeof Size[keyof typeof Size];\n\nexport const sizeMap: Record<Size, number> = {\n  small: 14,\n  default: 16,\n  large: 20,\n  xlarge: 24,\n} as const;\n\ninterface AccessibleFunctionParams {\n  'aria-labelledby'?: string;\n  'aria-label'?: string;\n  title?: string | null;\n}\n\ntype AccessibleFunctionReturnType =\n  | AccessibleFunctionParams\n  | { 'aria-hidden': true; alt: '' };\n\nexport function generateAccessibleProps(\n  role: 'img' | 'presentation',\n  glyphName: string,\n  {\n    ['aria-label']: ariaLabel,\n    ['aria-labelledby']: ariaLabelledby,\n    title,\n  }: AccessibleFunctionParams,\n): AccessibleFunctionReturnType {\n  switch (role) {\n    case 'img':\n      if (!ariaLabel && !ariaLabelledby && !title) {\n        return { 'aria-label': getGlyphLabel(glyphName) };\n      }\n\n      return {\n        ['aria-labelledby']: ariaLabelledby,\n        ['aria-label']: ariaLabel,\n        title,\n      };\n\n    case 'presentation':\n      return { 'aria-hidden': true, alt: '' };\n  }\n}\n\nexport function getGlyphLabel(name: string) {\n  return `${name.replace(/([a-z])([A-Z])/g, '$1 $2')} Icon`;\n}\n","/**\n * This is a generated file. Do not modify it manually.\n *\n * @script ./node_modules/.bin/ts-node packages/icon/scripts/build.ts\n * @checksum 15cf534e42e0a0b2f99d924df1d9ab4e\n */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport { generateAccessibleProps, sizeMap } from '../glyphCommon';\nimport { LGGlyph } from '../types';\nexport interface CreditCardProps extends LGGlyph.ComponentProps {}\n\nconst CreditCard = ({\n  className,\n  size = 16,\n  title,\n  ['aria-label']: ariaLabel,\n  ['aria-labelledby']: ariaLabelledby,\n  fill,\n  role = 'img',\n  ...props\n}: CreditCardProps) => {\n  const fillStyle = css`\n    color: ${fill};\n  `;\n  const noFlexShrink = css`\n    flex-shrink: 0;\n  `;\n  const accessibleProps = generateAccessibleProps(role, 'CreditCard', {\n    title,\n    ['aria-label']: ariaLabel,\n    ['aria-labelledby']: ariaLabelledby,\n  });\n  return (\n    <svg\n      className={cx(\n        {\n          [fillStyle]: fill != null,\n        },\n        noFlexShrink,\n        className,\n      )}\n      height={typeof size === 'number' ? size : sizeMap[size]}\n      width={typeof size === 'number' ? size : sizeMap[size]}\n      role={role}\n      {...accessibleProps}\n      {...props}\n      viewBox=\"0 0 16 16\"\n    >\n      <g\n        id=\"CreditCard-Copy\"\n        stroke=\"none\"\n        strokeWidth={1}\n        fill=\"none\"\n        fillRule=\"evenodd\"\n      >\n        <path\n          d=\"M13,3 C14.1015625,3 15,3.8984375 15,5 L15,11 C15,12.1015625 14.1015625,13 13,13 L3,13 C1.8984375,13 1,12.1015625 1,11 L1,5 C1,3.8984375 1.8984375,3 3,3 L13,3 Z M3,6 L13,6 L13,5 L3,5 L3,6 Z M13,11 L13,8 L3,8 L3,11 L13,11 Z M12,10 L9,10 L9,9 L12,9 L12,10 Z\"\n          id=\"\\uE214\"\n          fill={'currentColor'}\n        />\n      </g>\n    </svg>\n  );\n};\n\nCreditCard.displayName = 'CreditCard';\nCreditCard.isGlyph = true;\nCreditCard.propTypes = {\n  fill: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  className: PropTypes.string,\n};\nexport default CreditCard;\n"],"names":["sizeMap","small","default","large","xlarge","_templateObject2","data","_taggedTemplateLiteral","_templateObject","CreditCard","_ref","_generateAccessiblePr","className","_ref$size","size","title","ariaLabel","ariaLabelledby","fill","_ref$role","role","props","_objectWithoutProperties","fillStyle","css","noFlexShrink","accessibleProps","glyphName","_ref2","name","_defineProperty","aria-label","concat","replace","aria-hidden","alt","generateAccessibleProps","React.createElement","_extends","cx","height","width","viewBox","id","stroke","strokeWidth","fillRule","d","displayName","isGlyph","propTypes","PropTypes","string","oneOfType","number"],"mappings":"0zCAOO,IAAIA,EAAU,CACnBC,MAAO,GACPC,QAAS,GACTC,MAAO,GACPC,OAAQ,ICNV,SAASC,IACP,IAAIC,EAAOC,EAAuB,CAAC,8BAMnC,OAJAF,EAAmB,WACjB,OAAOC,GAGFA,EAGT,SAASE,IACP,IAAIF,EAAOC,EAAuB,CAAC,gBAAiB,UAMpD,OAJAC,EAAkB,WAChB,OAAOF,GAGFA,MAcLG,EAAa,SAAoBC,GACnC,IAAIC,EAEAC,EAAYF,EAAKE,UACjBC,EAAYH,EAAKI,KACjBA,OAAqB,IAAdD,EAAuB,GAAKA,EACnCE,EAAQL,EAAKK,MACbC,EAAYN,EAAK,cACjBO,EAAiBP,EAAK,mBACtBQ,EAAOR,EAAKQ,KACZC,EAAYT,EAAKU,KACjBA,OAAqB,IAAdD,EAAuB,MAAQA,EACtCE,EAAQC,EAAyBZ,EAAM,CAAC,YAAa,OAAQ,QAAS,aAAc,kBAAmB,OAAQ,SAE/Ga,EAAYC,MAAIhB,IAAmBU,GACnCO,EAAeD,MAAInB,KACnBqB,EDvCC,SAAiCN,EAAMO,EAAWjB,GACvD,IAAIkB,EAuBwBC,EArBxBb,EAAYN,EAAK,cACjBO,EAAiBP,EAAK,mBACtBK,EAAQL,EAAKK,MAEjB,OAAQK,GACN,IAAK,MACH,OAAKJ,GAAcC,GAAmBF,GAMnBe,EAAZF,EAAQ,GAA2B,kBAAmBX,GAAiBa,EAAgBF,EAAO,aAAcZ,GAAYc,EAAgBF,EAAO,QAASb,GAAQa,GAL9J,CACLG,cAaoBF,EAbQF,EAc7B,GAAGK,OAAOH,EAAKI,QAAQ,kBAAmB,SAAU,WARzD,IAAK,eACH,MAAO,CACLC,eAAe,EACfC,IAAK,KCmBWC,CAAwBhB,EAAM,cAEjDU,EAFgEnB,EAAwB,CACzFI,MAAOA,GACiC,aAAcC,GAAYc,EAAgBnB,EAAuB,kBAAmBM,GAAiBN,IAC/I,OAAoB0B,gBAAoB,MAAOC,EAAS,CACtD1B,UAAW2B,KAAGT,EAAgB,GAAIP,EAAmB,MAARL,GAAeO,EAAcb,GAC1E4B,OAAwB,iBAAT1B,EAAoBA,EAAOd,EAAQc,GAClD2B,MAAuB,iBAAT3B,EAAoBA,EAAOd,EAAQc,GACjDM,KAAMA,GACLM,EAAiBL,EAAO,CACzBqB,QAAS,cACML,gBAAoB,IAAK,CACxCM,GAAI,kBACJC,OAAQ,OACRC,YAAa,EACb3B,KAAM,OACN4B,SAAU,WACIT,gBAAoB,OAAQ,CAC1CU,EAAG,iQACHJ,GAAI,UACJzB,KAAM,2BAIVT,EAAWuC,YAAc,aACzBvC,EAAWwC,SAAU,EACrBxC,EAAWyC,UAAY,CACrBhC,KAAMiC,UAAUC,OAChBtC,KAAMqC,UAAUE,UAAU,CAACF,UAAUG,OAAQH,UAAUC,SACvDxC,UAAWuC,UAAUC"}