{"version":3,"file":"index.js","sources":["../src/glyphCommon.ts","../src/createIconComponent.tsx","../src/createGlyphComponent.tsx","../src/glyphs/index.ts","../src/index.ts","../src/isComponentGlyph.ts"],"sourcesContent":["export const Size = {\n  Small: 'small',\n  Default: 'default',\n  Large: 'large',\n  XLarge: 'xlarge',\n} as const;\n\nexport type Size = typeof Size[keyof typeof Size];\n\nexport const sizeMap: Record<Size, number> = {\n  small: 14,\n  default: 16,\n  large: 20,\n  xlarge: 24,\n} as const;\n\ninterface AccessibleFunctionParams {\n  'aria-labelledby'?: string;\n  'aria-label'?: string;\n  title?: string | null;\n}\n\ntype AccessibleFunctionReturnType =\n  | AccessibleFunctionParams\n  | { 'aria-hidden': true; alt: '' };\n\nexport function generateAccessibleProps(\n  role: 'img' | 'presentation',\n  glyphName: string,\n  {\n    ['aria-label']: ariaLabel,\n    ['aria-labelledby']: ariaLabelledby,\n    title,\n  }: AccessibleFunctionParams,\n): AccessibleFunctionReturnType {\n  switch (role) {\n    case 'img':\n      if (!ariaLabel && !ariaLabelledby && !title) {\n        return { 'aria-label': getGlyphLabel(glyphName) };\n      }\n\n      return {\n        ['aria-labelledby']: ariaLabelledby,\n        ['aria-label']: ariaLabel,\n        title,\n      };\n\n    case 'presentation':\n      return { 'aria-hidden': true, alt: '' };\n  }\n}\n\nexport function getGlyphLabel(name: string) {\n  return `${name.replace(/([a-z])([A-Z])/g, '$1 $2')} Icon`;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { LGGlyph } from './types';\nimport { Size } from './glyphCommon';\n\n// We omit size here because we map string values for size to numbers in this component.\nexport interface IconProps extends Omit<LGGlyph.ComponentProps, 'size'> {\n  glyph: string;\n  size?: Size | number;\n}\n\ntype GlyphObject = Record<string, LGGlyph.Component>;\n\nexport default function createIconComponent<\n  G extends GlyphObject = GlyphObject\n>(glyphs: G) {\n  const Icon = ({ glyph, ...rest }: IconProps) => {\n    const SVGComponent = glyphs[glyph];\n\n    return <SVGComponent {...rest} />;\n  };\n\n  Icon.displayName = 'Icon';\n\n  Icon.propTypes = {\n    glyph: PropTypes.oneOf(Object.keys(glyphs)).isRequired,\n    size: PropTypes.oneOfType([\n      PropTypes.oneOf(Object.values(Size)),\n      PropTypes.number,\n    ]),\n  } as any;\n\n  return Icon;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SVGR, LGGlyph } from './types';\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport { generateAccessibleProps, sizeMap, Size } from './glyphCommon';\n\nexport default function createGlyphComponent(\n  glyphName: string,\n  Glyph: SVGR.Component,\n): LGGlyph.Component {\n  function GlyphComponent({\n    className,\n    size = Size.Default,\n    fill,\n    title,\n    'aria-labelledby': ariaLabelledby,\n    'aria-label': ariaLabel,\n    role = 'img',\n    ...rest\n  }: LGGlyph.ComponentProps) {\n    const fillStyle = css`\n      color: ${fill};\n    `;\n\n    const renderedSize = typeof size === 'number' ? size : sizeMap[size];\n\n    if (!(role === 'img' || role === 'presentation')) {\n      console.warn(\n        \"Please provide a valid role to this component. Valid options are 'img' and 'presentation'. If you'd like the Icon to be accessible to screen readers please use 'img', otherwise set the role to 'presentation'.\",\n      );\n    }\n\n    return (\n      <Glyph\n        className={cx(\n          {\n            [fillStyle]: fill != null,\n          },\n          className,\n        )}\n        height={renderedSize}\n        width={renderedSize}\n        role={role}\n        {...generateAccessibleProps(role, glyphName, {\n          title,\n          ['aria-label']: ariaLabel,\n          ['aria-labelledby']: ariaLabelledby,\n        })}\n        {...rest}\n      />\n    );\n  }\n\n  GlyphComponent.displayName = glyphName;\n\n  GlyphComponent.isGlyph = true;\n\n  GlyphComponent.propTypes = {\n    fill: PropTypes.string,\n    size: PropTypes.oneOfType([\n      PropTypes.oneOf(Object.values(Size)),\n      PropTypes.number,\n    ]),\n    className: PropTypes.string,\n  };\n\n  return GlyphComponent;\n}\n","import createGlyphComponent from '../createGlyphComponent';\nimport { LGGlyph } from '../types';\n\n// Glyphs\nimport ActivityFeed from './ActivityFeed.svg';\nimport AddFile from './AddFile.svg';\nimport Apps from './Apps.svg';\nimport ArrowDown from './ArrowDown.svg';\nimport ArrowLeft from './ArrowLeft.svg';\nimport ArrowRight from './ArrowRight.svg';\nimport ArrowUp from './ArrowUp.svg';\nimport Beaker from './Beaker.svg';\nimport Bell from './Bell.svg';\nimport Building from './Building.svg';\nimport Bulb from './Bulb.svg';\nimport Calendar from './Calendar.svg';\nimport CaretDown from './CaretDown.svg';\nimport CaretLeft from './CaretLeft.svg';\nimport CaretRight from './CaretRight.svg';\nimport CaretUp from './CaretUp.svg';\nimport Charts from './Charts.svg';\nimport Checkmark from './Checkmark.svg';\nimport CheckmarkWithCircle from './CheckmarkWithCircle.svg';\nimport ChevronUp from './ChevronUp.svg';\nimport ChevronDown from './ChevronDown.svg';\nimport ChevronRight from './ChevronRight.svg';\nimport ChevronLeft from './ChevronLeft.svg';\nimport Cloud from './Cloud.svg';\nimport Copy from './Copy.svg';\nimport CreditCard from './CreditCard.svg';\nimport CurlyBraces from './CurlyBraces.svg';\nimport Database from './Database.svg';\nimport Download from './Download.svg';\nimport Edit from './Edit.svg';\nimport Ellipsis from './Ellipsis.svg';\nimport Export from './Export.svg';\nimport Favorite from './Favorite.svg';\nimport Filter from './Filter.svg';\nimport Folder from './Folder.svg';\nimport GovernmentBuilding from './GovernmentBuilding.svg';\nimport ImportantWithCircle from './ImportantWithCircle.svg';\nimport InfoWithCircle from './InfoWithCircle.svg';\nimport InviteUser from './InviteUser.svg';\nimport Laptop from './Laptop.svg';\nimport Lock from './Lock.svg';\nimport MagnifyingGlass from './MagnifyingGlass.svg';\nimport Megaphone from './Megaphone.svg';\nimport Menu from './Menu.svg';\nimport NotAllowed from './NotAllowed.svg';\nimport OpenNewTab from './OpenNewTab.svg';\nimport Person from './Person.svg';\nimport PersonWithLock from './PersonWithLock.svg';\nimport Plus from './Plus.svg';\nimport PlusWithCircle from './PlusWithCircle.svg';\nimport QuestionMarkWithCircle from './QuestionMarkWithCircle.svg';\nimport Refresh from './Refresh.svg';\nimport Save from './Save.svg';\nimport Settings from './Settings.svg';\nimport SortAscending from './SortAscending.svg';\nimport SortDescending from './SortDescending.svg';\nimport Stitch from './Stitch.svg';\nimport Support from './Support.svg';\nimport Trash from './Trash.svg';\nimport University from './University.svg';\nimport Unlock from './Unlock.svg';\nimport Unsorted from './Unsorted.svg';\nimport UpDownCarets from './UpDownCarets.svg';\nimport Upload from './Upload.svg';\nimport VerticalEllipsis from './VerticalEllipsis.svg';\nimport Visibility from './Visibility.svg';\nimport VisibilityOff from './VisibilityOff.svg';\nimport Warning from './Warning.svg';\nimport X from './X.svg';\nimport XWithCircle from './XWithCircle.svg';\n\nconst glyphs = {\n  ActivityFeed,\n  AddFile,\n  Apps,\n  ArrowDown,\n  ArrowLeft,\n  ArrowRight,\n  ArrowUp,\n  Beaker,\n  Bell,\n  Building,\n  Bulb,\n  Calendar,\n  CaretDown,\n  CaretLeft,\n  CaretRight,\n  CaretUp,\n  Charts,\n  Checkmark,\n  CheckmarkWithCircle,\n  ChevronDown,\n  ChevronLeft,\n  ChevronRight,\n  ChevronUp,\n  Cloud,\n  Copy,\n  CreditCard,\n  CurlyBraces,\n  Database,\n  Download,\n  Edit,\n  Ellipsis,\n  Export,\n  Favorite,\n  Filter,\n  Folder,\n  GovernmentBuilding,\n  ImportantWithCircle,\n  InfoWithCircle,\n  InviteUser,\n  Laptop,\n  Lock,\n  MagnifyingGlass,\n  Megaphone,\n  Menu,\n  NotAllowed,\n  OpenNewTab,\n  Person,\n  PersonWithLock,\n  Plus,\n  PlusWithCircle,\n  QuestionMarkWithCircle,\n  Refresh,\n  Save,\n  Settings,\n  SortAscending,\n  SortDescending,\n  Stitch,\n  Support,\n  Trash,\n  University,\n  Unlock,\n  Unsorted,\n  UpDownCarets,\n  Upload,\n  VerticalEllipsis,\n  Visibility,\n  VisibilityOff,\n  Warning,\n  X,\n  XWithCircle,\n} as const;\n\ntype GlyphName = keyof typeof glyphs;\n\nconst glyphKeys = Object.keys(glyphs) as Array<GlyphName>;\n\nconst processedGlyphs = glyphKeys.reduce((acc, name) => {\n  acc[name] = createGlyphComponent(name, glyphs[name]);\n\n  return acc;\n}, {} as Record<GlyphName, LGGlyph.Component>);\n\nexport default processedGlyphs;\n","import createIconComponent from './createIconComponent';\nimport glyphs from './glyphs';\n\nexport { default as createIconComponent } from './createIconComponent';\nexport { default as glyphs } from './glyphs';\nexport { Size } from './glyphCommon';\nexport { isComponentGlyph } from './isComponentGlyph';\nexport default createIconComponent(glyphs);\n","import { LGGlyph } from './types';\n\n/** Helper type to check if element is a LeafyGreen UI Glyph  */\nexport function isComponentGlyph(\n  child: React.ReactNode,\n): child is React.ReactElement<LGGlyph.ComponentProps> {\n  return (\n    child != null &&\n    typeof child === 'object' &&\n    'type' in child &&\n    (child.type as any).isGlyph === true\n  );\n}\n"],"names":["Size","Small","Default","Large","XLarge","sizeMap","small","default","large","xlarge","createIconComponent","glyphs","Icon","_ref","glyph","rest","_objectWithoutProperties","SVGComponent","React","createElement","displayName","propTypes","PropTypes","oneOf","Object","keys","isRequired","size","oneOfType","values","number","_templateObject","data","createGlyphComponent","glyphName","Glyph","GlyphComponent","_generateAccessiblePr","className","_ref$size","fill","title","ariaLabelledby","ariaLabel","_ref$role","role","fillStyle","css","renderedSize","console","warn","_extends","cx","_defineProperty","height","width","_ref2","name","aria-label","concat","replace","aria-hidden","alt","generateAccessibleProps","isGlyph","string","ActivityFeed","AddFile","Apps","ArrowDown","ArrowLeft","ArrowRight","ArrowUp","Beaker","Bell","Building","Bulb","Calendar","CaretDown","CaretLeft","CaretRight","CaretUp","Charts","Checkmark","CheckmarkWithCircle","ChevronDown","ChevronLeft","ChevronRight","ChevronUp","Cloud","Copy","CreditCard","CurlyBraces","Database","Download","Edit","Ellipsis","Export","Favorite","Filter","Folder","GovernmentBuilding","ImportantWithCircle","InfoWithCircle","InviteUser","Laptop","Lock","MagnifyingGlass","Megaphone","Menu","NotAllowed","OpenNewTab","Person","PersonWithLock","Plus","PlusWithCircle","QuestionMarkWithCircle","Refresh","Save","Settings","SortAscending","SortDescending","Stitch","Support","Trash","University","Unlock","Unsorted","UpDownCarets","Upload","VerticalEllipsis","Visibility","VisibilityOff","Warning","X","XWithCircle","processedGlyphs","reduce","acc","child","_typeof","type"],"mappings":"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"}